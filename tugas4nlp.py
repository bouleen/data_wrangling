# -*- coding: utf-8 -*-
"""tugas4NLP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kmMuRqbeDqYhvSvcYKXfT6VSG60vj4XW
"""

import pandas as pd
import numpy as np

file_name = 'cryptocurrency.csv'

# Muat dataset
try:
    # Memuat file yang sudah diunggah
    df = pd.read_csv(file_name)
    print(f"✅ Dataset '{file_name}' berhasil dimuat dengan {len(df)} baris!")
except Exception as e:
    print(f"❌ Terjadi kesalahan saat memuat dataset: {e}")

print("\n--- A. Discovery (Telaah Data) ---")

# Menampilkan 5 baris pertama
print("\n[A.1] 5 Baris Pertama:")
print(df.head())

# Menampilkan informasi umum (tipe data dan non-null count)
print("\n[A.2] Info Dataset Sebelum Cleaning:")
df.info()

# Menghitung Missing Values (Nilai Hilang)
print("\n[A.3] Jumlah Missing Values per Kolom:")
print(df.isnull().sum())

# Mendeteksi Duplikasi
print("\n[A.4] Jumlah Baris Duplikat:")
print(df.duplicated().sum())

print("\n--- B & C. Structuring & Cleaning ---")

df_cleaned = df.copy()

# C.1. Menghapus Duplikasi (jika ada)
rows_before_drop = len(df_cleaned)
df_cleaned.drop_duplicates(inplace=True)
print(f"[C.1] Dihapus {rows_before_drop - len(df_cleaned)} baris duplikat.")

# C.2. Membersihkan dan Mengubah Kolom Tanggal/Waktu
# Mengubah kolom 'timestamp' ke tipe datetime
df_cleaned['timestamp'] = pd.to_datetime(df_cleaned['timestamp'], errors='coerce')
print("[C.2] Kolom 'timestamp' dikonversi ke tipe datetime.")

# C.3. Membersihkan dan Mengubah Kolom Moneter ke Numerik
cols_to_clean = ['price_usd', 'vol_24h', 'market_cap']

for col in cols_to_clean:
    # Hapus karakter '$' dan ','
    # Gunakan .astype(str) untuk menghindari error pada nilai non-string (misalnya np.nan)
    df_cleaned[col] = df_cleaned[col].astype(str).str.replace(r'[$,"]', '', regex=True)

    # Mengubah ke tipe numerik. 'errors=coerce' akan mengubah nilai yang gagal di-parse menjadi NaN.
    df_cleaned[col] = pd.to_numeric(df_cleaned[col], errors='coerce')
    print(f"[C.3] Kolom '{col}' dibersihkan dari '$', ',' dan diubah ke tipe float.")


# C.4. Menangani Missing Values (NaN) yang muncul setelah konversi
# Cek berapa banyak NaN yang muncul di kolom yang baru diubah
nan_after_conversion = df_cleaned[cols_to_clean].isnull().sum()
print("\n[C.4] Jumlah NaN setelah Konversi Numerik:")
print(nan_after_conversion[nan_after_conversion > 0])

# Strategi Imputasi: Ganti NaN pada price/vol/market_cap dengan median (nilai tengah)
for col in cols_to_clean:
    median_val = df_cleaned[col].median()
    df_cleaned[col].fillna(median_val, inplace=True)
print("\n[C.4] Nilai NaN pada kolom moneter diisi dengan median masing-masing kolom.")

print("\n--- D. Enriching (Pengayaan Fitur) ---")

# D.1. Ekstraksi Tanggal dan Waktu
df_cleaned['date'] = df_cleaned['timestamp'].dt.date
df_cleaned['hour'] = df_cleaned['timestamp'].dt.hour
print("[D.1] Kolom 'date' dan 'hour' berhasil ditambahkan dari 'timestamp'.")

# D.2. Membuat kolom 'Vol_per_Cap' (Rasio Volume 24 jam terhadap Market Cap)
df_cleaned['Vol_per_Cap'] = df_cleaned['vol_24h'] / df_cleaned['market_cap']
print("[D.2] Fitur 'Vol_per_Cap' (Volume/Market Cap) berhasil ditambahkan.")

print("\n--- E. Validating (Validasi Akhir) ---")

# E.1. Cek Ulang Missing Value
print("\n[E.1] Total Missing Values setelah Cleaning:")
print(df_cleaned.isnull().sum().sum()) # Seharusnya mendekati nol

# E.2. Cek Tipe Data Akhir
print("\n[E.2] Info Dataset Akhir:")
df_cleaned.info()

# E.3. Cek Statistik Deskriptif (memastikan format numerik sudah benar)
print("\n[E.3] Statistik Deskriptif Kolom Numerik Utama:")
print(df_cleaned[['price_usd', 'vol_24h', 'market_cap', 'Vol_per_Cap']].describe())

print("\n--- F. Publishing (Penyimpanan Data) ---")

file_output = 'cryptocurrency_bersih_output.csv'

# Menyimpan ke format CSV. index=False agar kolom index tidak ikut tersimpan.
df_cleaned.to_csv(file_output, index=False)

print(f"\n✅ Data bersih berhasil disimpan ke file: {file_output}")
print("Anda dapat mengunduh file ini dari panel File di sisi kiri Google Colab.")